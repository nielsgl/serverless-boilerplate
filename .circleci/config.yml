# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.5.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    environment:
      # COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN
      COVERALLS_SERVICE_JOB_ID: "${CIRCLE_BUILD_NUM}"
      COVERALLS_SERVICE_NAME: CircleCI

    working_directory: ~/app

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # # Test for offline server
      # - run:
      #     name: Installing Serverless Framework
      #     command: sudo npm install -g serverless
      # - run:
      #     name: Test for starting offline server
      #     command: ./lib/scripts/startOffline.sh

      - run:
          name: Install Code Climate
          command: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      - run:
          name: Make Code Climate Reporter executable
          command: chmod +x ./cc-test-reporter

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run lint
      - run:
          name: Run lint
          command: yarn lint

      - run:
          name: Prepare Code Climate for receiving coverage
          command: ./cc-test-reporter before-build

      # run tests
      - run:
          name: Run tests with coverage
          command: yarn test:coverage

      # - run:
      #     name: Test for stopping offline server
      #     command: ./lib/scripts/stopOffline.sh

      # store test results
      - store_test_results:
          path: ~/app/coverage

      # store artifacts
      - store_artifacts:
          path: ~/app/coverage

      # - run:
      #     name: Send coverage to Code Climate
      #     command: ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?

      - run:
          name: Prepare coverage for Code Climate
          command: ./cc-test-reporter format-coverage -t lcov $CIRCLE_ARTIFACTS/coverage/lcov.info

      - run:
          name: Upload coverage to Code Climate
          command: ./cc-test-reporter upload-coverage

      # - run:
      #     name: Send results to Coveralls.io
      #     command: yarn test:cover:CI

      - run:
          name: Send coverage report to Codecov
          command: cat coverage/lcov.info | bash <(curl -s https://codecov.io/bash)

      - run:
          name: Send coverage report to Codacy
          command: cat ./coverage/lcov.info | ./node_modules/.bin/codacy-coverage -t $CODACY_PROJECT_TOKEN
